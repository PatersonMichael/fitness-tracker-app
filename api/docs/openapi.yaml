openapi: 3.0.1
info:
  version: 1.0.0
  title: Fitness Tracker
  description: Track nutrition and activity to monitor and improve your fitness.
servers:
  - url: http://localhost:8088
  - url: https://localhost:5443
paths:
  /api/userprofiles:
    x-swagger-router-controller: 'user-profiles'
    summary: User Profiles Resource
    get:
      tags:
        - User Profiles
      summary: Get all user profiles
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserProfile'
                x-content-type: application/json
                maxItems: 100
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default: 
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'                    
    post:
      tags:
        - User Profiles
      summary: Post a new user profile
      requestBody:
        description: The user profile
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfile'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
                x-content-type: application/json
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'                
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default: 
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'                
  /api/userprofiles/{id}:
    x-swagger-router-controller: 'user-profiles'
    get:
      tags:
        - User Profiles
      summary: Get a User Profile
      parameters:
        - name: id
          in: path
          description: The identifier
          required: true
          schema:
            $ref: '#/components/schemas/ObjectId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
                x-content-type: application/json
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default: 
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - User Profiles
      summary: Puts the user profile
      parameters:
        - name: id
          in: path
          description: The identifier
          required: true
          schema:
            $ref: '#/components/schemas/ObjectId'
      requestBody:
        description: The user profile
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfile'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
                x-content-type: application/json
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default: 
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - User Profiles
      summary: Deletes the user profile
      parameters:
        - name: id
          in: path
          description: The identifier
          required: true
          schema:
            $ref: '#/components/schemas/ObjectId'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default: 
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/healthcheck:
    x-swagger-router-controller: 'health-check'
    summary: Healthcheck Resource
    get:
      tags:
        - HealthCheck
      summary: Get a healthcheck
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheck'
              x-content-type: application/json
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default: 
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/authentication:
    x-swagger-router-controller: 'authentication'
    summary: Authentication Resource
    post:
      tags:
        - Authentication
      summary: Authenticate a User
      requestBody:
        description: The user credentials
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCredential'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authentication'
              x-content-type: application/json
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'              
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'          
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default: 
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    ObjectId: 
      type: string
      pattern: ^[0-9a-fA-F]{24}$
      minLength: 24
      maxLength: 24
      example: 6320f7a2cb396657bf6b51dd  
    Genders:
      type: string
      description: Enum Genders
      enum:
        - Male
        - Female
        - Unknown
      default: Unknown
    UserProfile:
      type: object
      required:
        - emailAddress
        - password
        - lastName
        - firstName
      properties:
        emailAddress:
          type: string
          maxLength: 320
          format: email
          pattern: ^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$
        password:
          type: string
          minLength: 8
          maxLength: 72
          format: password
          pattern: ^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\$%\^&\*])(?=.{8,})
        lastName:
          type: string
          maxLength: 30
          pattern: ^[0-9a-z]+$
        firstName:
          type: string
          maxLength: 30
          pattern: ^[0-9a-z]+$
        birthDate:
          type: string
          format: date-time
          maxLength: 25
        gender:
          $ref: '#/components/schemas/Genders'
      additionalProperties: false
    HealthCheck:
      type: object
      properties:
        serverTime:
          type: string
          format: date-time
          maxLength: 25
        serverStatus:
          type: string
          maxLength: 320
          pattern: Healthy
      additionalProperties: false
    UserCredential:
      type: object
      required:
        - emailAddress
        - password
      properties:
        emailAddress:
          type: string
          maxLength: 320
          format: email
          pattern: ^[0-9a-z]+$            
        password:
          type: string
          minLength: 8
          maxLength: 72
          format: password
          pattern: ^[0-9a-z]+$
      additionalProperties: false
    Authentication:
      type: object
      properties:
        userProfileId:
          $ref: '#/components/schemas/ObjectId'
        token:
          type: string
          maxLength: 320
          format: password
          pattern: ^{}
      additionalProperties: false
    Error:
      type: object
      required:
        - message
      properties:
        message:
          description: A human readable error message
          type: string
          maxLength: 640
          nullable: false
      additionalProperties: true
    ProblemDetails:
      type: object
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
      additionalProperties: {}
  securitySchemes:
    ApiKey:
      type: apiKey
      in: header
      name: X-Api-Key
security:
  - ApiKey: []
