openapi: 3.0.1
info:
  title: Fitness Tracker
  description: Track nutrition and activity to monitor and improve your fitness.
  version: 1.0.0
servers:
  - url: http://localhost:8088
  - url: https://localhost:5443
tags:
  - name: Health Check
    description: System Health Resource
  - name: Authentication
    description: Authentication Resource
  - name: User Profile
    description: User Profiles Resource
  - name: Time Zone
    description: Time Zone Resource
paths:
  /api/userprofiles:
    x-swagger-router-controller: 'user-profiles'
    get:
      tags:
        - User Profile
      summary: Get all user profiles
      operationId: getUserProfiles
      security:
        - apiKey: []              
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserProfile'
                maxItems: 100
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - User Profile
      summary: Post a new user profile
      operationId: postUserProfile
      requestBody:
        description: The user profile
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfile'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/userprofiles/{id}:
    x-swagger-router-controller: 'user-profiles'
    get:
      tags:
        - User Profile
      summary: Get a User Profile
      operationId: getUserProfileById
      security:
        - apiKey: []      
      parameters:
        - name: id
          in: path
          description: The identifier
          schema:
            $ref: '#/components/schemas/ObjectId'
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - User Profile
      summary: Puts the user profile
      operationId: putUserProfile
      security:
        - apiKey: []      
      parameters:
        - name: id
          in: path
          description: The identifier
          schema:
            $ref: '#/components/schemas/ObjectId'
          required: true
      requestBody:
        description: The user profile
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfile'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - User Profile
      summary: Deletes the user profile
      operationId: deleteUserProfile
      security:
        - apiKey: []      
      parameters:
        - name: id
          in: path
          description: The identifier
          schema:
            $ref: '#/components/schemas/ObjectId'
          required: true
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/healthcheck:
    x-swagger-router-controller: 'health-check'
    get:
      tags:
        - Health Check
      summary: Get a healthcheck
      operationId: getHealthCheck
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheck'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/authentication:
    x-swagger-router-controller: 'authentication'
    post:
      tags:
        - Authentication
      summary: Authenticate a User
      operationId: postAuthentication
      requestBody:
        description: The user credentials
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCredential'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authentication'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/timezones:
    x-swagger-router-controller: 'time-zones'    
    get:
      tags:
        - Time Zone
      summary: Get all time zones
      operationId: getTimeZones
      security:
        - apiKey: []              
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TimeZone'
                maxItems: 100
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/timezones/{id}:
    x-swagger-router-controller: 'time-zones'
    get:
      tags:
        - Time Zone
      summary: Get a Time Zone
      operationId: getTimeZoneById
      security:
        - apiKey: []      
      parameters:
        - name: id
          in: path
          description: The identifier
          schema:
            $ref: '#/components/schemas/ObjectId'
          required: true
          example: 633e5bc407a2e1cfc6546323
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeZone'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'                
components:
  schemas:
    ObjectId:
      type: string
      pattern: ^[0-9a-fA-F]{24}$
      minLength: 24
      maxLength: 24
      example: 6320f7a2cb396657bf6b51dd
    Genders:
      type: string
      description: Enum Genders
      enum:
        - Male
        - Female
        - Unknown
      default: Unknown
    UserProfilePreferences:
      type: object
      properties:
        weightUnit:
          type: string
        heightUnit:
          type: string
        distanceUnit:
          type: string
        energyUnit:
          type: string
        temperatureUnit:
          type: string
        waterUnit:
          type: string
        activityLevel:
          type: string
        timezone:
          type: string
      additionalProperties: false
    UserProfile:
      type: object
      required:
        - emailAddress
        - password
        - lastName
        - firstName
      properties:
        emailAddress:
          type: string
          maxLength: 320
          format: email
          pattern: ^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$
        password:
          type: string
          minLength: 8
          maxLength: 72
          format: password
          pattern: ^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\$%\^&\*])(?=.{8,})
        lastName:
          type: string
          maxLength: 30
          pattern: ^[0-9a-z]+$
        firstName:
          type: string
          maxLength: 30
          pattern: ^[0-9a-z]+$
        birthDate:
          type: string
          format: date-time
          maxLength: 25
        gender:
          $ref: '#/components/schemas/Genders'
        preferences:
          $ref: '#/components/schemas/UserProfilePreferences'
      additionalProperties: false
    HealthCheck:
      type: object
      properties:
        serverTime:
          type: string
          format: date-time
          maxLength: 25
        serverStatus:
          type: string
          maxLength: 320
          pattern: Healthy
      additionalProperties: false
    UserCredential:
      type: object
      required:
        - emailAddress
        - password
      properties:
        emailAddress:
          type: string
          maxLength: 320
          format: email
          pattern: ^[0-9a-z]+$
        password:
          type: string
          minLength: 8
          maxLength: 72
          format: password
          pattern: ^[0-9a-z]+$
      additionalProperties: false
      example:
        emailAddress: 'someone@example.org'
        password: 'Some$Password123'
    Authentication:
      type: object
      properties:
        token:
          type: string
          maxLength: 320
          format: password
          pattern: ^{}
      additionalProperties: false
    TimeZone:
      type: object
      properties:
        countryName:
          type: string
        countryCode2:
          type: string
        timeZone:
          type: string
        utcOffset:
          type: string
        description:
          type: string
      additionalProperties: false
    Error:
      type: object
      required:
        - message
      properties:
        message:
          description: A human readable error message
          type: string
          maxLength: 640
          nullable: false
      additionalProperties: true
    ProblemDetails:
      type: object
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
      additionalProperties: {}      
  securitySchemes:
    apiKey:
      type: apiKey
      in: header      
      name: x-access-token
## security:
##  - apiKey: []
